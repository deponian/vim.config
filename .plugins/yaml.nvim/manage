#!/usr/bin/env lua

local select_bin = function()
	local bins = { "docker", "podman" }
	for _, bin in ipairs(bins) do
		if os.execute("which " .. bin) ~= nil then
			return bin
		end
	end

	print("No container engine found, bins are: " .. table.concat(bins, ", "))
	os.exit(1)
end

local exec_and_exit = function(cmd)
	local status, _ = os.execute(cmd)
	os.exit(status)
end

local build_with = function(bin)
	exec_and_exit(bin .. " build -t yaml.nvim .")
end

local test_with = function(bin)
	for line in io.lines(".github/workflows/tests.yml") do
		if string.find(line, "PlenaryBustedDirectory") then
			local cleaned = string.gsub(line, "-? run: ", "")
			exec_and_exit(bin .. " run -it yaml.nvim " .. cleaned)
		end
	end
end

local nvim_with = function(bin)
	exec_and_exit(bin .. " run -it yaml.nvim")
end

local main = function()
	local opts = {}
	local bin = select_bin()
	local cmds = { build = build_with, test = test_with, nvim = nvim_with }
	for cmd, func in pairs(cmds) do
		table.insert(opts, cmd)
		if cmd == arg[1] then
			func(bin)
		end
	end

	print("No command found, options are: " .. table.concat(opts, ", "))
end

main()
